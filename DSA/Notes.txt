Linear data structure
- Arrays, Linkieed lists, stacks, queyes.

Non-linear DS - element connected to n number of elements in the
- Trees, Graphs


static ds - memory allocated at compile time

dynamic ds - memory allocated at run time

Common operations - 
Searching, Sorting Insertion , Updation, Deletion

Stack is an ADT -> which uses either Arrays or Linked lists for implementation

An ADT tells what is to be done and data structure tells how it is to be done.

---------------
Arrays -> kunal kushawaha
heap
- heap is a region of comp memory used for dynamic memory allocation 
- It's a large pool of memory where objects are dynamically stored during program execution - Objects created with new keyword are always stored in heap memory.
- Objects remain in heap memory until they are no longer referenced - and then garbage collected

- declaration of referece variables etc -> at compile time
- intialization of obbjects happens at run time

dynamic memory allocation -> at the time of runtime memory allocation happens

* 2d array
- arrays of arrays in heap -> 
-> array.length -> number of rows
-> array[0].length -> number of columns

* why do we need array lists
- so in order to handel the dynamic memory allocation we use array lists
- part of the collection framework in java - java.util.package
- ArrayList<Integer> arrl = new ArrayList<>(); - here Integer is a wrapper class. - it encapsulate a primitive data type into an object. - it allows primitive data types to be used as objects.
- Here size is fixed but it checks when the array is full and then it doubles the size of the array. -> amortized time complexity.

Questions to be solved
- create a swap functions for arrays - ArrayList
- max function for both
- max item in the range
- reversing using swap -> aka 2 pointer method

- Arrays in java are passed by referece and not by value.


